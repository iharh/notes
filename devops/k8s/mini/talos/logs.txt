https://www.talos.dev/v1.9/introduction/quickstart/

...
      --talosconfig string   The path to the Talos configuration file. Defaults to 'TALOSCONFIG' env variable if set, otherwise '$HOME/.talos/config' and '/var/run/secrets/talos.dev/config' in order.
...
$ cat ~/.talos/config
context: talos-default
contexts:
    talos-default:
        endpoints:
            - 127.0.0.1:37073
        ca: ...
        crt: ...
        key: ...

$ talosctl cluster create
  --cidr string                              CIDR of the cluster network (IPv4, ULA network for IPv6 is derived in automated way) (default "10.5.0.0/24")
  --cni-bundle-url string                    URL to download CNI bundle from (VM only) (default "https://github.com/siderolabs/talos/releases/download/v1.9.3/talosctl-cni-bundle-${ARCH}.tar.gz")
  --with-debug                               enable debug in Talos config to send service logs to the console
Global Flags:
  --name string          the name of the cluster (default "talos-default")
  --provisioner string   Talos cluster provisioner to use (default "docker")
  --state string         directory path to store cluster state (default "/home/iharh/.talos/clusters")
  --talosconfig string   The path to the Talos configuration file. Defaults to 'TALOSCONFIG' env variable if set, otherwise '$HOME/.talos/config' and '/var/run/secrets/talos.dev/config' in order.

validating CIDR and reserving IPs
generating PKI and tokens
creating state directory in "/home/iharh/.talos/clusters/talos-default"
downloading ghcr.io/siderolabs/talos:v1.9.3
creating network talos-default
creating controlplane nodes
creating worker nodes
waiting for API
bootstrapping cluster
waiting for etcd to be healthy: OK
waiting for etcd members to be consistent across nodes: OK
waiting for etcd members to be control plane nodes: OK
waiting for apid to be ready: OK
waiting for all nodes memory sizes: OK
waiting for all nodes disk sizes: OK
waiting for no diagnostics: OK
waiting for kubelet to be healthy: OK
waiting for all nodes to finish boot sequence: OK
waiting for all k8s nodes to report: OK
waiting for all control plane static pods to be running: OK
waiting for all control plane components to be ready: OK
waiting for all k8s nodes to report ready: OK
waiting for kube-proxy to report ready: OK
â—³ waiting for coredns to report ready: no ready pods found for namespace "kube-system" and label selector "k8s-app=kube-dns"
context deadline exceeded

$ talosctl cluster show
PROVISIONER           docker
NAME                  talos-default
NETWORK NAME          talos-default
NETWORK CIDR          10.5.0.0/24
NETWORK GATEWAY
NETWORK MTU           1500
KUBERNETES ENDPOINT   https://127.0.0.1:37487

NODES:

NAME                           TYPE           IP         CPU    RAM      DISK
talos-default-controlplane-1   controlplane   10.5.0.2   2.00   2.1 GB   -
talos-default-worker-1         worker         10.5.0.3   2.00   2.1 GB   -
