https://docs.docker.com/articles/systemd/
https://docs.docker.com/engine/articles/systemd/

http://serverfault.com/questions/413397/how-to-set-environment-variable-in-systemd-service

sudo systemctl daemon-reload

/etc/systemd/system/multi-user.target.wants/docker.service'
/usr/lib/systemd/system/docker.service

/usr/bin/docker -d -H fd:// -H tcp://0.0.0.0:2375

RH/CentOS:
/etc/sysconfig/...
docker
docker-network
docker.rpmnew
docker.rpmsave
docker-storage
docker-storage-setup

/etc/sysconfig/docker-network
#DOCKER_NETWORK_OPTIONS=-H fd:// -H tcp://0.0.0.0:2375
DOCKER_NETWORK_OPTIONS='-H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock'


Arch/Manjaro:
cp /usr/lib/systemd/system/docker.service to /etc/systemd/system/docker.service

[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
After=network-online.target containerd.service docker.socket firewalld.service
BindsTo=containerd.service
Wants=network-online.target
Requires=docker.socket

[Service]
Type=notify
# the default is not to use systemd for cgroups because the delegate issues still
# exists and systemd currently does not support the cgroup feature set required
# for containers run by docker
ExecStart=/usr/bin/dockerd -s overlay2 -H fd:// --containerd=/run/containerd/containerd.sock
ExecReload=/bin/kill -s HUP $MAINPID
LimitNOFILE=1048576
# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNPROC=infinity
LimitCORE=infinity
# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
#TasksMax=infinity
TimeoutStartSec=0
# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes
# kill only the docker process, not all processes in the cgroup
KillMode=process
# restart the docker process if it exits prematurely
Restart=on-failure
StartLimitBurst=3
StartLimitInterval=60s

[Install]
WantedBy=multi-user.target
