name="linux-kernel-stable"
pkgver="6.7"
url="https://github.com/oklopfer/debs/raw/master/empty.tar.xz"
pacdeps=("linux-headers-stable-deb" "linux-headers-generic-stable-deb" "linux-modules-stable-deb" "linux-image-unsigned-stable-deb")
pkgdesc="Provides the latest stable Linux kernel via the Ubuntu mainline repositories"
maintainer="Oren Klopfer <oren@taumoda.com>"
repology=("project: linux" "repo: distrowatch")

name="brave-browser-deb"
gives="brave-browser"
pkgver="1.60.118"
breaks=("${gives}-bin" "${gives}-git" "${gives}-app")
url="https://github.com/brave/${gives}/releases/download/v${pkgver}/${gives}_${pkgver}_amd64.deb"
homepage='https://brave.com/'
pkgdesc="Release version of world's most unique, privacy friendly web browser"
hash="2e8f45ef3f2024944877b2c17d54e3d7c0bae6cc03afc0bb32dd603665e84a86"
arch=('amd64')
pacdeps=("brave-keyring-deb")
repology=("project: brave")
maintainer="Elsie19 <elsie19@pm.me>"

maintainer="wizard-28 <wiz28@pm.me>"

name="awesome-git"
pkgname="awesome"
pkgdesc="awesome window manager"
url="https://github.com/awesomeWM/${pkgname}.git"
pkgver="4.3"
depends=("libx11-6" "libxcb-cursor0" "libxcb-icccm4" "libxcb-keysyms1" "libxcb-randr0" "libxcb-shape0" "libxcb-util1" "libxcb-xinerama0" "libxcb-xkb1" "libxcb-xrm0" "libxcb-xtest0" "libxcb1" "libxdg-basedir1" "libxkbcommon-x11-0" "libxkbcommon0" "libstartup-notification0" "libglib2.0-0" "libgdk-pixbuf2.0-0" "libgdk-pixbuf-2.0-0" "libdbus-1-3" "libcairo2" "libcairo-gobject2" "gir1.2-glib-2.0" "gir1.2-gdkpixbuf-2.0" "gir1.2-freedesktop" "lua5.3" "liblua5.3-0" "dbus-x11" "libnotify-bin" "wmctrl" "x11-apps" "xcb-proto" "xdotool" "xorg" "lua-lgi")
makedepends=("asciidoctor" "gir1.2-pango-1.0" "gir1.2-gtk-3.0" "git" "gzip" "lua-ldoc" "imagemagick" "asciidoc" "xmlto" "cmake" "lua-busted" "lua-check" "liblua5.3-dev" "libxcb-cursor-dev" "libxcb-util0-dev" "libxcb-keysyms1-dev" "libxcb-icccm4-dev" "libxcb-xkb-dev" "libxkbcommon-dev" "libstartup-notification0-dev" "libxdg-basedir-dev" "libxcb-xrm-dev" "libxkbcommon-x11-dev" "lua-lgi" "libglib2.0-dev" "libgdk-pixbuf2.0-dev" "libxcb-xinerama0-dev" "gettext" "libdbus-1-dev" "libgirepository1.0-dev" "libpango1.0-dev" "libx11-xcb-dev" "libxcb-randr0-dev" "libxcb-shape0-dev" "libxcb-xfixes0-dev" "xutils-dev" "libluajit-5.1-dev" "libcairo2-dev" "lua-discount" "x11proto-dev" "libxcb-xtest0-dev" "libmarkdown2" "libyaml-dev" "lua-any" "lua-cliargs" "lua-dkjson" "lua-filesystem" "lua-inifile" "lua-luassert" "lua-mediator" "lua-penlight" "lua-say" "lua-system" "lua-term" "lua5.2" "libc6" "luajit")
optdepends=("rlwrap: readline support for awesome-client"
  "dex: autostart your desktop files"
  "librsvg2-dev: for displaying SVG files without scaling artifacts"
  "feh: for icon generation etc"
  "awesome-extra: additional modules for awesome"
  "awesome-doc: documentation for awesome")
breaks=("${pkgname}" "${pkgname}-bin")
pkgver() {
  git ls-remote "${url}" master | cut -f1 | cut -c1-8
}
build() {
  # Build rquired files
  make -j"${NCPU}" DESTDIR="${pkgdir}"
}
package() {
  # Install awesome
  sudo make install DESTDIR="${pkgdir}"
}
post_install() {
  # Install to correct location .desktop file
  sudo mkdir -p /usr/share/xsessions/
  sudo ln -sf /usr/local/share/xsessions/"${pkgname}".desktop /usr/share/xsessions/"${pkgname}".desktop
}
post_remove() {
  # Remove desktop file
  sudo rm -f /usr/share/xsessions/"${pkgname}".desktop
}
# vim:set ft=sh ts=2 sw=2 et:


maintainer="wizard-28 <wiz28@pm.me>"

name="nushell-bin"
pkgname="nushell"
pkgver="0.87.1"
pkgdesc="A new type of shell"
breaks=("${pkgname}" "${pkgname}-git" "${pkgname}-deb" "${pkgname}-app")
repology=("project: nushell")
arch=('arm64' 'amd64')
if [[ ${CARCH} == "arm64" ]]; then
  hash="f66f43e3c21ab9a66f9a46edae30e6537dc38d30c215a0535c9ac50905e55e46"
  gnuarch="aarch64"
else
  hash="7bcffb7a9066ef7c99e299dc3c1b87d471deea91e652edad129e27f742eef72d"
  gnuarch="x86_64"
fi
url="https://github.com/nushell/nushell/releases/download/${pkgver}/nu-${pkgver}-${gnuarch}-unknown-linux-gnu.tar.gz"

package() {
  # binaries
  find ./ \
    -maxdepth 1 \
    -executable \
    -type f \
    -name "nu*" \
    -exec sudo install -vDm755 -t "${pkgdir}/usr/bin" "{}" +

  # documentation
  sudo install -vDm644 -t "${pkgdir}/usr/share/doc/${pkgname}" README.txt

  # license
  sudo install -vDm644 -t "${pkgdir}/usr/share/licenses/${pkgname}" LICENSE
}
# vim:set ft=sh ts=2 sw=2 et:


name="wezterm-bin"
pkgname="wezterm"
gives="wezterm"
pkgver="20230712-072601-f4abf8fd"
pkgdesc="A GPU-accelerated cross-platform terminal emulator and multiplexer written by @wez and implemented in Rust"
url="https://github.com/wez/wezterm/releases/download/${pkgver}/wezterm-${pkgver}.Ubuntu22.04.tar.xz"
hash="3b03b75a26a30f2de28180d66c5556e5878f6f3320d79d12fb78ea486400b6c3"
breaks=("${pkgname}-app")
repology=("project: wezterm")
maintainer="smokeythemonkey <smokeythemonkey@posteo.net>"

package() {
  # Install Binaries
  sudo install -Dm755 "${SRCDIR}/wezterm/usr/bin/wezterm" -t "${pkgdir}/usr/bin/"
  sudo install -Dm755 "${SRCDIR}/wezterm/usr/bin/open-wezterm-here" "${pkgdir}/usr/bin/"
  sudo install -Dm755 "${SRCDIR}/wezterm/usr/bin/strip-ansi-escapes" "${pkgdir}/usr/bin/"
  sudo install -Dm755 "${SRCDIR}/wezterm/usr/bin/wezterm-gui" "${pkgdir}/usr/bin/"
  sudo install -Dm755 "${SRCDIR}/wezterm/usr/bin/wezterm-mux-server" "${pkgdir}/usr/bin/"

  # Copy Icons and plugins
  sudo cp -r "${SRCDIR}/wezterm/usr/share/"* "/usr/share/"

  # Install .desktop file
  sudo install -Dm644 "${SRCDIR}/wezterm/usr/share/applications/org.wezfurlong.wezterm.desktop" "${pkgdir}/usr/share/applications/org.wezfurlong.wezterm.desktop"

  # Install wezterm.sh script
  sudo install -Dm755 "${SRCDIR}/wezterm/etc/profile.d/wezterm.sh" "${pkgdir}/etc/profile.d/wezterm.sh"
}

post_install() {
  # Run wezterm.sh script to hook up shell integration
  sudo "/etc/profile.d/wezterm.sh"
}

post_remove() {
  # Remove additional files
  sudo rm -f "/usr/share/bash-completions/wezterm"
  sudo rm -f "/usr/share/icons/hicolor/128x128/apps/org.wezfurlong.wezterm.png"
  sudo rm -f "/usr/share/metainfo/org.wezfurlong.wezterm.appdata.xml"
  sudo rm -f "/usr/share/nautilus-python/extensions/wezterm-nautilus.py"
  sudo rm -rf "/usr/share/wezterm/"
  sudo rm -f "/usr/share/zsh/functions/Completion/Unix/_wezterm"

  # Delete wezterm config
  if ask "Do you want to delete wezterm config files?" N; then
    rm -rf "${homedir}/.config/.wezterm/"
  fi
}


name="postman-bin"
pkgver="10.18.10"
pkgdesc="Build, test, and document your APIs faster"
repology=("project: postman" "visiblename: postman-bin")
url="https://dl.pstmn.io/download/version/${pkgver}/linux64"
hash="08063d6f63bed6f44e5047c64517997b1f5287995bdec202e1313154744be95a"
maintainer="Marie Piontek <marie@kaifa.ch>"
gives="postman"
breaks=("postman" "postman-deb" "postman-app")
depends=("libxss1" "libnss3" "libgtk-3-0")

package() {
  # Get desktop file and install it
  wget -q "https://aur.archlinux.org/cgit/aur.git/plain/postman.desktop?h=postman-bin" -O postman.desktop
  sudo install -Dm644 postman.desktop -t "${pkgdir}/usr/share/applications"

  # Install the rest of the app
  sudo install -d "${pkgdir}/opt/postman/" "${pkgdir}/usr/bin"
  sudo install -d "${pkgdir}/usr/share/icons/hicolor/128x128/apps"

  sudo cp -r "${SRCDIR}/Postman/app/"* "${pkgdir}/opt/postman/"
  sudo chmod +x "${pkgdir}/opt/postman/postman"
}

post_install() {
  sudo ln -s -r "/opt/postman/resources/app/assets/icon.png" "/usr/share/icons/hicolor/128x128/apps/postman.png"
  sudo ln -s -r "/opt/postman/Postman" "/usr/bin/postman"
}

post_remove() {
  sudo rm -f "/usr/share/icons/hicolor/128x128/apps/postman.png"
  sudo rm -f "/usr/bin/postman"
}


name="jetbrains-toolbox-bin"
pkgname="jetbrains-toolbox"
pkgver="1.24.12080"
breaks=("${pkgname}" "${pkgname}-git" "${pkgname}-deb" "${pkgname}-app")
replace=("${pkgname}")
gives="${pkgname}"
pkgdesc="JetBrains Toolbox is a suite of professional development tools for a range of languages and technologies using JetBrains IDEs"
maintainer="Paul Cosma (saenai) <paul.cosma97@gmail.com>"
hash="d819065a45d29d53646490fbd8ca45dbcaa3d544bdbc6da4494377460ddf6b79"
url="https://download-cdn.jetbrains.com/toolbox/${pkgname}-${pkgver}.tar.gz"

package() {
  sudo mkdir -p "${pkgdir}/usr/bin"
  sudo mv "./${pkgname}" "${pkgdir}/usr/bin"
}
