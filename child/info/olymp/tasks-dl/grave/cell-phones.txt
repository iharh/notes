64Mb 2sec

Предположим, что базовые станции для мобильных телефонов 4-го поколения, расположенные в районе, Tampere функционируют следующим образом. Район поделен на квадраты. Квадраты образуют матрицу S*S, в которой строки и столбцы нумеруются от 0 до S-1. Каждый квадрат содержит базовую станцию. Количество активных мобильных телефонов внутри квадрата может изменяться, потому что телефоны перемещаются из квадрата в квадрат или потому, что телефоны включаются и выключаются. Время от времени каждая базовая станция сообщает изменения в своем количестве активных телефонов на главную базовую станцию единственную для всех строк и столбцов матрицы.

Напишите программу, которая получает эти отчеты и отвечает на запросы о текущем общем количестве активных мобильных телефонов в любой области прямоугольной формы.

Ввод и вывод
Ввод необходимо читать из стандартного ввода как целые числа и отеты на запросы нужно выводить в стандартный вывод как целые числа. Ввод кодируется следующим образом. Каждый ввод задается на отдельной строке и содержит одну инструкцию - целое и некоторое количество параметров - целые числа, в соответствии со следующей таблицей.

Инструкции	Параметры	Значения
0	S	Инициализировать матрицу размером S*S так,что бы она содержала все нули. Эта инструкция дается только один раз и будет первой инструкцией.
1	X Y A	Прибавить к количеству активных телефонов в квадрате (X,Y). A может как положительным, так и отрицательным.
2	L B R T	Выдать текущее количество активных мобильных телефонов в квадратах (X,Y) из прямоугольной области L <= X <= R, B <= Y <= T
3	
Завершает работу программы. Эта инструкция дается только один раз и будет последней инструкцией.
Все значения всегда будут в указанных диапазонах, поэтому нет необходимости их проверять. В частности, если A отрицательное, можно полагать, что оно не установит количество мобильных телефонов в квадрате в отрицательное значение. Индексация начинается от 0. Т.е. для таблицы размером 4*4 мы имеем 0 <= X <= 3 and 0 <= Y <= 3.

Ваша программа не должна отвечать на инструкции, кроме инструкции 2. Если же инструкция - 2, то Ваша программа должна вывести в стандартный вывод ответ на запрос, как одно целое число в строке.

Инструкции по программированию
В примерах, приведенных ниже, целое last это последнее целое, которое Вы прочитали извходной строки, а answer - целая переменная, которая содержит Ваш ответ.

Если Ваша программа на C++ и использует потоковый ввод/вывод, Вы должны использовать следующий способ чтения из стандартного ввода и записи в стандартный вывод:

cin>>last;
cout<<answer<<endl<<flush;
Если Ваша программа выполнена на C или C++ и использует scanf и printf, Вы должны использовать следующий способ чтения из стандартного ввода и записи в стандартный вывод:

scanf ("%d", &last);
printf("%d\n",answer); fflush (stdout);
Если Ваша программа написана на Паскале, Вы должны использовать следующий способ чтения из стандартного ввода и записи в стандартный вывод:

Read(last); ... Readln;
Writeln(answer);
Пример
stdin	stdout	Пояснение
0 4	
Инициализировать таблицу 4x4.
1 1 2 3	
Добавить в позицию (1,2) +3
2 0 0 2 2	
Запрос на сумму прямоугольника 0 <= X <= 2, 0 <= Y <= 2.

3	Ответ на запрос.
1 1 1 2	
Добавить в позицию (1, 1) with +2.
1 1 2 -1	
Добавить в позицию (1, 2) with -1.
2 1 1 2 3	
Запрос на сумму прямоугольника 1 <= X <= 2, 1 <= Y <= 3.

4	Ответ на запрос.
3	
Завершить работу программы.
Ограничения
Размер таблицы	SxS	1x1 <= SxS <= 1024x1024
Значение ячейки V в любое время	V	0 <= V <= 215 -1 (= 32767)
Величина изменения A	A	-215 <= A <= 215-1 (= 32767)
Количество U инструкций на вводе	U	3 <= U <= 60002
Максимальное количество телефонов во всей таблице	M	M= 230
Из 20 тестовых примеров, 16 такие, в которых размер таблицы не превышает 512x512.

Пример ввода:
0 4
1 1 2 3
2 0 0 2 2
1 1 1 2
1 1 2 -1
2 1 1 2 3
3
Пример вывода:
3
4

