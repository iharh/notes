https://stackoverflow.com/questions/11616630/json-stringify-avoid-typeerror-converting-circular-structure-to-json/

JSON.stringifyOnce = function(obj, replacer, indent) {
    var printedObjects = [];
    var printedObjectKeys = [];

    function printOnceReplacer(key, value) {
        // browsers will not print more than 20K, I don't see the point to allow 2K.. algorithm will not be fast anyway if we have too many objects
        if (printedObjects.length > 2000) { 
            return 'object too long';
        }
        var printedObjIndex = false;
        printedObjects.forEach( function(obj, index) {
            if (obj === value) {
                printedObjIndex = index;
            }
        });

        if (key == '') { //root element
            printedObjects.push(obj);
            printedObjectKeys.push("root");
            return value;
        }

        else if (printedObjIndex + "" != "false" && typeof(value) == "object") {
            if (printedObjectKeys[printedObjIndex] == "root") {
                return "(pointer to root)";
            } else {
                return "(see " + ((!!value && !!value.constructor) ? value.constructor.name.toLowerCase()  : typeof(value)) + " with key " + printedObjectKeys[printedObjIndex] + ")";
            }
        } else {
            var qualifiedKey = key || "(empty key)";
            printedObjects.push(value);
            printedObjectKeys.push(qualifiedKey);
            if (replacer) {
                return replacer(key, value);
            } else {
                return value;
            }
        }
    }
    return JSON.stringify(obj, printOnceReplacer, indent);
};



