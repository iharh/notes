    
    ...
    import io.micrometer.core.instrument.MeterRegistry;
    import io.micrometer.core.instrument.binder.MeterBinder;
    import org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryCustomizer;
    import org.springframework.context.annotation.Bean;
    import org.springframework.context.annotation.Configuration;

    import io.github.mweirauch.micrometer.jvm.extras.ProcessMemoryMetrics;
    import io.github.mweirauch.micrometer.jvm.extras.ProcessThreadMetrics;

    @Configuration
    public class SomeConfig {
        @Bean
        public FXCfgBean cfgBean() {
            return new FXCfgBean();
        }

        @Bean
        public MeterBinder processMemoryMetrics() {
            return new ProcessMemoryMetrics();
        }

        @Bean
        public MeterBinder processThreadMetrics() {
            return new ProcessThreadMetrics();
        }

        @Bean
        public MeterRegistryCustomizer<MeterRegistry> metricsCommonTags() {
            return registry -> registry.config().commonTags("application", cfgBean().getApplicationName(), "lang-id", cfgBean().getLangId());
        }
    }

usage
    ...
    @Autowired
    private MeterRegistry meterRegistry;
