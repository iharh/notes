http://rust.unhandledexpression.com/nom/
http://rust.unhandledexpression.com/nom/home.html

https://crates.io/crates/nom
https://github.com/Geal/nom

https://crates.io/crates/nom-peg
https://docs.rs/nom-peg
https://github.com/rust-bakery/nom-peg

docs
https://github.com/Geal/nom/blob/master/doc
https://github.com/Geal/nom/blob/master/doc/choosing_a_combinator.md
https://github.com/Geal/nom/blob/master/doc/error_management.md

http://rust.unhandledexpression.com/nom/home.html
http://rust.unhandledexpression.com/nom/making_a_new_parser_from_scratch.html
http://rust.unhandledexpression.com/nom/error_management.html
http://rust.unhandledexpression.com/nom/how_nom_macros_work.html

2022
https://naiveai.hashnode.dev/practical-parsing-nom
2021
https://www.reddit.com/r/rust/comments/mtmufz/struggling_with_noms_error_handling/
2020
https://codeandbitters.com/lets-build-a-parser/
2018
Rust DC - nom
https://www.youtube.com/watch?v=KBK6VNs40JI
2017
https://air.mozilla.org/hands-on-parsing-in-rust-toronto-rust-meetup/
https://mystor.github.io/rust_meetup_20170530/#/
https://github.com/jdm/nom-workshop-exercises
http://spw17.langsec.org/papers/chifflier-parsing-in-2017.pdf
2015
https://fnordig.de/2015/07/16/omnomnom-parsing-iso8601-dates-using-nom/

whatsnew
https://github.com/Geal/nom/blob/master/CHANGELOG.md
http://unhandledexpression.com/general/2019/06/17/nom-5-is-here.html
http://unhandledexpression.com/general/2018/05/14/nom-4-0-faster-safer-simpler-parsers.html
    https://github.com/Geal/nom/blob/master/doc/upgrading_to_nom_4.md
http://unhandledexpression.com/general/rust/security/2016/11/25/this-year-in-nom-2-0-is-here.html
