https://github.com/spring-gradle-plugins/dependency-management-plugin
https://plugins.gradle.org/plugin/io.spring.dependency-management

https://docs.spring.io/dependency-management-plugin/docs/current/api/
https://docs.spring.io/dependency-management-plugin/docs/current/reference/html/
https://docs.spring.io/dependency-management-plugin/docs/current-SNAPSHOT/reference/html/

https://docs.gradle.org/current/userguide/dependency_management_attribute_based_matching.html

for specific configurations
https://docs.spring.io/dependency-management-plugin/docs/current/reference/html/#dependency-management-configuration-specific
    dependencyManagement {
         compile {
              dependencies { ... }
              imports { ...  }
         }
    }

2023
https://medium.com/@sarguru1981/dependency-management-using-kotlin-dsl-28d06d678dfc
2016
https://spring.io/blog/2016/12/16/dependency-management-plugin-1-0-0-rc1#better-support-for-gradle-script-kotlin
2015
https://spring.io/blog/2015/02/23/better-dependency-management-for-gradle
https://blog.jayway.com/2015/11/23/reusing-spring-boots-dependency-management/
qa
https://stackoverflow.com/questions/40818688/gradle-script-kotlin-and-dependencymanagement

notes
Gradle does not provide an API for accessing a dependencyâ€™s classifier during resolution.
Unfortunately, this means that dependency management-based exclusions will not work when a classifier is involved.

samples
https://github.com/Netflix/genie/blob/master/build.gradle

dependencyManagement {
    ...
    dependencySet(group: "com.squareup.retrofit2", version: "2.6.1") {
        entry "retrofit"
        entry "converter-jackson"
    }
    dependencySet("org.junit.jupiter:5.6.1") {
        entry("junit-jupiter-api")
        entry("junit-jupiter-engine")
    }
    ...
}

gradle
    dependencies --configuration compile
    dependencyManagement
        // report of the project dependency management

prog-access
    val managedVersions = dependencyManagement.managedVersions
    val springCoreVersion = managedVersions["org.springframework:spring-core"]
    dependencyManagement.getManagedVersionsForConfiguration(configurations.getByName("compile"))
